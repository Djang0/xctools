======================================================================
FAIL: test_airspace_geometry (airspace.tests.TestAixmParser)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/lreenaers/Documents/projects/xctools/airspace/tests.py", line 84, in test_airspace_geometry
    self.assertEqual(airspace.gis_data, airspace_test['gis_data'])
AssertionError: Lists differ: [[50.[5609 chars]951404848, 4.945776706290057, 14], [50.1279469[1351 chars]03']] != [[50.[5609 chars]951401513, 4.9457767062878055, 14], [50.127946[1347 chars]03']]

First differing element 158:
[50.12477951404848, 4.945776706290057, 14]
[50.12477951401513, 4.9457767062878055, 14]

Diff is 11623 characters long. Set self.maxDiff to None to see it.

----------------------------------------------------------------------
Ran 5 tests in 0.266s

FAILED (failures=1, errors=1)




Ludo : The test fails because of GPS accuracy. here whe have very high acurracy (which does not even match sensors precicion).
        the most common part of both float coordinates is 50.1247795140,4.9457767062
        If we talk about more than 9 decimals, the scale of accuracy is micron. I'd say the fith decimal (1.1 meter) woul be sufficient when flying.

        source: https://gis.stackexchange.com/questions/8650/measuring-accuracy-of-latitude-and-longitude/8674#8674

       What I did :

       * Creating GisPoint class in order to represent coordinates. we can specify accuracy GisPoint accuracy and compare their equality;
       * Creating a static GisDataFactory class responsible for building GisPoint list for the Airspace class. benefits are:
            ** Opening and closing xml ressource only once;
            ** Searching the same xml tag only once ;
            ** isolating business object from logic ;
            ** Object architecture is loosly coupled (which is good when refactoring).

        All this should be sufficient to make the failed test succeed.

        What I don't know:

        * What is the crc used for?
        * We'll we use it ?
        * Has the truncating of coordinates, an impact on crc checks ?